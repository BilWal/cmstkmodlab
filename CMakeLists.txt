cmake_minimum_required(VERSION 3.1)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(CMAKE_VERSION VERSION_LESS "3.7.0")
        set(CMAKE_INCLUDE_CURRENT_DIR ON)
endif()

project(cmstkmodlab VERSION 2.3.0)

execute_process(COMMAND bash -c "git describe --dirty --always --tags" OUTPUT_VARIABLE GIT_DESCRIBE)

message("")
message("############################################")
message("")
message("     cmstkmodlab")
message("")
message(" version: ${GIT_DESCRIBE}")
message("")
message("############################################")
message("")

set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

set(basepath ${PROJECT_SOURCE_DIR})

find_package(PkgConfig REQUIRED)

add_compile_definitions(__${CMAKE_HOST_SYSTEM_NAME}__)

if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Darwin")
        option(CMSTKMODLAB_FAKEIO "Build with fake IO support" ON)
        option(CMSTKMODLAB_FAKEUEYE "Build with fake uEYE support" ON)
else()
        option(CMSTKMODLAB_FAKEIO "Build with fake IO support" OFF)
        option(CMSTKMODLAB_FAKEUEYE "Build with fake uEYE support" OFF)
endif()

if(CMSTKMODLAB_FAKEIO)
        message("Fake IO support: ON")
        add_compile_definitions(USE_FAKEIO)
else()
        message("Fake IO support: OFF")
endif()

if(CMSTKMODLAB_FAKEUEYE)
        message("Fake uEYE support: ON")
        add_compile_definitions(NOUEYE)
else()
        message("Fake uEYE support: OFF")
endif()

find_package(CURL)
if(CURL_FOUND)
        INCLUDE_DIRECTORIES(${CURL_INCLUDE_DIR})
else(CURL_FOUND)
        MESSAGE(FATAL_ERROR "Could not find the CURL library and development files.")
endif(CURL_FOUND)

set(CMAKE_AUTOMOC ON)

find_package(Qt5 COMPONENTS Core Gui Widgets OpenGL Script Xml Svg Network Charts REQUIRED)

if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Darwin")
        set(ENV{ROOT_DIR} /opt/local/libexec/root6/share/root/cmake)
else()
	set(ENV{ROOT_DIR} /home/mussgill/development/root_bin/cmake)
endif()
find_package(ROOT 6.16 REQUIRED)

pkg_check_modules(LIBGPHOTO2 REQUIRED IMPORTED_TARGET libgphoto2)
pkg_check_modules(OPENCV REQUIRED IMPORTED_TARGET opencv)
pkg_check_modules(EXIV2 REQUIRED IMPORTED_TARGET exiv2)

if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Darwin")
        option(CMSTKMODLAB_MARTA "Build with support for MARTA CO2 chiller" OFF)
else()
        option(CMSTKMODLAB_MARTA "Build with support for MARTA CO2 chiller" ON)
endif()

if(CMSTKMODLAB_MARTA)
        message("Support for MARTA CO2 chiller: ON")
        pkg_check_modules(libmodbus REQUIRED IMPORTED_TARGET libmodbus)
else()
        message("Support for MARTA CO2 chiller: OFF")
        add_compile_definitions(NOMARTA)
endif()

add_subdirectory(external)
add_subdirectory(devices)
add_subdirectory(common)
add_subdirectory(common_test)

option(CMSTKMODLAB_THERMO1 "Build with support for version 1 of thermal test setup" OFF)
if(CMSTKMODLAB_THERMO1)
        message("Support for version 1 of thermal test setup: ON")
        include(FindQwt)
else()
        message("Support for version 1 of thermal test setup: OFF")
endif()

option(CMSTKMODLAB_THERMO2 "Build with support for version 2 of thermal test setup" OFF)
if(CMSTKMODLAB_THERMO2)
        message("Support for version 2 of thermal test setup: ON")
else()
        message("Support for version 2 of thermal test setup: OFF")
endif()

if(CMSTKMODLAB_THERMO1 OR CMSTKMODLAB_THERMO2)
        add_subdirectory(thermo)
endif()

option(CMSTKMODLAB_PUMPSTATION "Build with support for pump station" OFF)
if(CMSTKMODLAB_PUMPSTATION)
        message("Support for pump station: ON")
        add_subdirectory(pumpstation)
else()
        message("Support for pump station: OFF")
endif()

option(CMSTKMODLAB_ASSEMBLY "Build with support for PS automated assembly" OFF)
if(CMSTKMODLAB_ASSEMBLY)
        message("Support for PS automated assembly: ON")
        add_subdirectory(assembly)
else()
        message("Support for PS automated assembly: OFF")
endif()

option(CMSTKMODLAB_PLASMA "Build with support for plasma cleaner test setup" OFF)
if(CMSTKMODLAB_PLASMA)
        message("Support for plasma cleaner test setup: ON")
        add_subdirectory(plasma)
else()
        message("Support for plasma cleaner test setup: OFF")
endif()
